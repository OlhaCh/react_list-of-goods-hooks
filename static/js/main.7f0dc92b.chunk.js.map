{"version":3,"sources":["App.tsx","components/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","goods","className","map","good","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","buttonStatus","setButtonStatus","reorderedGoods","visibleGoods","sort","g1","g2","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","type","onClick","current","ReactDOM","render","document","getElementById"],"mappings":"kMAoBKA,E,oECbQC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,oBAAIC,UAAU,QAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OACRF,UAAU,kBAFZ,SAKGE,GAFIA,SDNPC,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,Y,SAGGN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA+BE,IAAMO,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASR,EAASW,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwCL,mBAAS,IAAjD,mBAAOM,EAAP,KAAqBC,EAArB,KAsBMC,EAlDR,SACEd,EACAU,EACAH,GAEA,IAAMQ,EAAY,YAAOf,GAiBzB,OAfAe,EAAaC,MAAK,SAACC,EAAYC,GAC7B,OAAQR,GACN,KAAKZ,EAASqB,QACZ,OAAOF,EAAGG,cAAcF,GAC1B,KAAKpB,EAASuB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OACxB,QACE,OAAO,MAITf,GACFQ,EAAaQ,UAGRR,EA4BgBS,CACrBpB,EACAM,EACAH,GAGF,OACE,sBAAKN,UAAU,MAAf,UAEE,sBACEA,UAAU,eADZ,UAGE,wBACEA,UAAWA,IAAU,iBACnB,CAAE,WAA6B,kBAAjBW,IAChBa,KAAK,SACLC,QApCc,WACpBf,EAAYb,EAASqB,SACrBN,EAAgB,kBA8BZ,iCASA,wBACEZ,UAAWA,IAAU,iBACnB,CAAE,WAA6B,eAAjBW,IAChBa,KAAK,SACLC,QAxCW,WACjBf,EAAYb,EAASuB,QACrBR,EAAgB,eAkCZ,4BAQA,wBACEZ,UAAWA,IAAU,oBACnB,CAAE,YAAaM,IACjBkB,KAAK,SACLC,QA3CQ,WACdlB,GAAc,SAACmB,GAAD,OAAcA,MAsCxB,sBAQEpB,GAAcG,IAAaZ,EAASW,OACpC,wBACER,UAAU,4BACVwB,KAAK,SACLC,QA/CI,WACZlB,GAAc,GACdG,EAAYb,EAASW,MACrBI,EAAgB,KAyCV,sBASJ,cAAC,EAAD,CAAWb,MAAOc,QExHxBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7f0dc92b.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useState } from 'react';\nimport className from 'classnames';\nimport { GoodsList } from './components/GoodsList';\n\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1: string, g2: string) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return g1.localeCompare(g2);\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [buttonStatus, setButtonStatus] = useState('');\n\n  const sortAlphabeth = () => {\n    setSortType(SortType.ALPABET);\n    setButtonStatus('sortAlphabeth');\n  };\n\n  const sortLength = () => {\n    setSortType(SortType.LENGTH);\n    setButtonStatus('sortLength');\n  };\n\n  const reverse = () => {\n    setIsReversed((current) => !current);\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n    setButtonStatus('');\n  };\n\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n  );\n\n  return (\n    <div className=\"App\">\n\n      <div\n        className=\"App__buttons\"\n      >\n        <button\n          className={className('button is-info',\n            { 'is-light': buttonStatus !== 'sortAlphabeth' })}\n          type=\"button\"\n          onClick={sortAlphabeth}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          className={className('button is-link',\n            { 'is-light': buttonStatus !== 'sortLength' })}\n          type=\"button\"\n          onClick={sortLength}\n        >\n          Sort by length\n        </button>\n        <button\n          className={className('button is-warning',\n            { 'is-light': !isReversed })}\n          type=\"button\"\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n        {(isReversed || sortType !== SortType.NONE) && (\n          <button\n            className=\"button is-danger is-light\"\n            type=\"button\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <GoodsList goods={reorderedGoods} />\n    </div>\n  );\n};\n","import React from 'react';\nimport './GoodsList.scss';\n\ninterface Props {\n  goods: string[];\n}\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul className=\"Goods\">\n    {goods.map(good => (\n      <li\n        data-cy=\"Good\"\n        className=\"Goods__item box\"\n        key={good}\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}